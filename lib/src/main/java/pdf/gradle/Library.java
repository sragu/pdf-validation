/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pdf.gradle;

import com.google.common.io.Files;
import com.google.common.io.Resources;
import org.verapdf.core.EncryptedPdfException;
import org.verapdf.core.ModelParsingException;
import org.verapdf.core.ValidationException;
import org.verapdf.gf.foundry.VeraGreenfieldFoundryProvider;
import org.verapdf.pdfa.Foundries;
import org.verapdf.pdfa.VeraPDFFoundry;
import org.verapdf.pdfa.validation.profiles.Profiles;

import javax.xml.bind.JAXBException;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class Library {
    public boolean injectedPDF(String pdfPath) {
        VeraGreenfieldFoundryProvider.initialise();  // to use vera parser

        try (VeraPDFFoundry pdfFoundry = Foundries.defaultInstance()) {
            var scanningProfile = Resources.getResource("verapdf-profile-6-6-1-t01.xml");

            var validationProfile = Profiles.profileFromXml(scanningProfile.openStream());
            var validator = pdfFoundry.createValidator(validationProfile, false);

            // validation profile is downloaded from:
            // https://github.com/veraPDF/veraPDF-validation-profiles/wiki/PDFA-Part-1-rules#rule-661-1
            // https://github.com/veraPDF/veraPDF-validation-profiles/blob/integration/PDF_A/1b/6.6%20Actions/6.6.1%20General/verapdf-profile-6-6-1-t01.xml

            var parser = pdfFoundry.createParser(new File(pdfPath));
            var result = validator.validate(parser);
            System.out.println(result.getFailedChecks().size());
            return !result.isCompliant();
        } catch (EncryptedPdfException | ValidationException ignored) {
        } catch (ModelParsingException | JAXBException | IOException e) {
            throw new RuntimeException(e);
        }

        return false;
    }
}
